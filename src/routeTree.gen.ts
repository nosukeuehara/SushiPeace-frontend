/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SushiWelcomeIndexRouteImport } from './routes/sushi-welcome/index'
import { Route as SushiWelcomeNewRouteImport } from './routes/sushi-welcome/new'
import { Route as SushiWelcomeGroupIndexRouteImport } from './routes/sushi-welcome/group/index'
import { Route as SushiWelcomeGroupRoomIdroomIdIndexRouteImport } from './routes/sushi-welcome/group/$roomId/(roomId)/index'
import { Route as SushiWelcomeGroupRoomIdshareShareRouteImport } from './routes/sushi-welcome/group/$roomId/(share)/share'
import { Route as SushiWelcomeGroupRoomIdresultResultRouteImport } from './routes/sushi-welcome/group/$roomId/(result)/result'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SushiWelcomeIndexRoute = SushiWelcomeIndexRouteImport.update({
  id: '/sushi-welcome/',
  path: '/sushi-welcome/',
  getParentRoute: () => rootRouteImport,
} as any)
const SushiWelcomeNewRoute = SushiWelcomeNewRouteImport.update({
  id: '/sushi-welcome/new',
  path: '/sushi-welcome/new',
  getParentRoute: () => rootRouteImport,
} as any)
const SushiWelcomeGroupIndexRoute = SushiWelcomeGroupIndexRouteImport.update({
  id: '/sushi-welcome/group/',
  path: '/sushi-welcome/group/',
  getParentRoute: () => rootRouteImport,
} as any)
const SushiWelcomeGroupRoomIdroomIdIndexRoute =
  SushiWelcomeGroupRoomIdroomIdIndexRouteImport.update({
    id: '/sushi-welcome/group/$roomId/(roomId)/',
    path: '/sushi-welcome/group/$roomId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const SushiWelcomeGroupRoomIdshareShareRoute =
  SushiWelcomeGroupRoomIdshareShareRouteImport.update({
    id: '/sushi-welcome/group/$roomId/(share)/share',
    path: '/sushi-welcome/group/$roomId/share',
    getParentRoute: () => rootRouteImport,
  } as any)
const SushiWelcomeGroupRoomIdresultResultRoute =
  SushiWelcomeGroupRoomIdresultResultRouteImport.update({
    id: '/sushi-welcome/group/$roomId/(result)/result',
    path: '/sushi-welcome/group/$roomId/result',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sushi-welcome/new': typeof SushiWelcomeNewRoute
  '/sushi-welcome': typeof SushiWelcomeIndexRoute
  '/sushi-welcome/group': typeof SushiWelcomeGroupIndexRoute
  '/sushi-welcome/group/$roomId/result': typeof SushiWelcomeGroupRoomIdresultResultRoute
  '/sushi-welcome/group/$roomId/share': typeof SushiWelcomeGroupRoomIdshareShareRoute
  '/sushi-welcome/group/$roomId': typeof SushiWelcomeGroupRoomIdroomIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sushi-welcome/new': typeof SushiWelcomeNewRoute
  '/sushi-welcome': typeof SushiWelcomeIndexRoute
  '/sushi-welcome/group': typeof SushiWelcomeGroupIndexRoute
  '/sushi-welcome/group/$roomId/result': typeof SushiWelcomeGroupRoomIdresultResultRoute
  '/sushi-welcome/group/$roomId/share': typeof SushiWelcomeGroupRoomIdshareShareRoute
  '/sushi-welcome/group/$roomId': typeof SushiWelcomeGroupRoomIdroomIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/sushi-welcome/new': typeof SushiWelcomeNewRoute
  '/sushi-welcome/': typeof SushiWelcomeIndexRoute
  '/sushi-welcome/group/': typeof SushiWelcomeGroupIndexRoute
  '/sushi-welcome/group/$roomId/(result)/result': typeof SushiWelcomeGroupRoomIdresultResultRoute
  '/sushi-welcome/group/$roomId/(share)/share': typeof SushiWelcomeGroupRoomIdshareShareRoute
  '/sushi-welcome/group/$roomId/(roomId)/': typeof SushiWelcomeGroupRoomIdroomIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sushi-welcome/new'
    | '/sushi-welcome'
    | '/sushi-welcome/group'
    | '/sushi-welcome/group/$roomId/result'
    | '/sushi-welcome/group/$roomId/share'
    | '/sushi-welcome/group/$roomId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sushi-welcome/new'
    | '/sushi-welcome'
    | '/sushi-welcome/group'
    | '/sushi-welcome/group/$roomId/result'
    | '/sushi-welcome/group/$roomId/share'
    | '/sushi-welcome/group/$roomId'
  id:
    | '__root__'
    | '/'
    | '/sushi-welcome/new'
    | '/sushi-welcome/'
    | '/sushi-welcome/group/'
    | '/sushi-welcome/group/$roomId/(result)/result'
    | '/sushi-welcome/group/$roomId/(share)/share'
    | '/sushi-welcome/group/$roomId/(roomId)/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SushiWelcomeNewRoute: typeof SushiWelcomeNewRoute
  SushiWelcomeIndexRoute: typeof SushiWelcomeIndexRoute
  SushiWelcomeGroupIndexRoute: typeof SushiWelcomeGroupIndexRoute
  SushiWelcomeGroupRoomIdresultResultRoute: typeof SushiWelcomeGroupRoomIdresultResultRoute
  SushiWelcomeGroupRoomIdshareShareRoute: typeof SushiWelcomeGroupRoomIdshareShareRoute
  SushiWelcomeGroupRoomIdroomIdIndexRoute: typeof SushiWelcomeGroupRoomIdroomIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sushi-welcome/new': {
      id: '/sushi-welcome/new'
      path: '/sushi-welcome/new'
      fullPath: '/sushi-welcome/new'
      preLoaderRoute: typeof SushiWelcomeNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sushi-welcome/': {
      id: '/sushi-welcome/'
      path: '/sushi-welcome'
      fullPath: '/sushi-welcome'
      preLoaderRoute: typeof SushiWelcomeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sushi-welcome/group/': {
      id: '/sushi-welcome/group/'
      path: '/sushi-welcome/group'
      fullPath: '/sushi-welcome/group'
      preLoaderRoute: typeof SushiWelcomeGroupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sushi-welcome/group/$roomId/(result)/result': {
      id: '/sushi-welcome/group/$roomId/(result)/result'
      path: '/sushi-welcome/group/$roomId/result'
      fullPath: '/sushi-welcome/group/$roomId/result'
      preLoaderRoute: typeof SushiWelcomeGroupRoomIdresultResultRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sushi-welcome/group/$roomId/(share)/share': {
      id: '/sushi-welcome/group/$roomId/(share)/share'
      path: '/sushi-welcome/group/$roomId/share'
      fullPath: '/sushi-welcome/group/$roomId/share'
      preLoaderRoute: typeof SushiWelcomeGroupRoomIdshareShareRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sushi-welcome/group/$roomId/(roomId)/': {
      id: '/sushi-welcome/group/$roomId/(roomId)/'
      path: '/sushi-welcome/group/$roomId'
      fullPath: '/sushi-welcome/group/$roomId'
      preLoaderRoute: typeof SushiWelcomeGroupRoomIdroomIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/sushi-welcome/new' {
  const createFileRoute: CreateFileRoute<
    '/sushi-welcome/new',
    FileRoutesByPath['/sushi-welcome/new']['parentRoute'],
    FileRoutesByPath['/sushi-welcome/new']['id'],
    FileRoutesByPath['/sushi-welcome/new']['path'],
    FileRoutesByPath['/sushi-welcome/new']['fullPath']
  >
}
declare module './routes/sushi-welcome/index' {
  const createFileRoute: CreateFileRoute<
    '/sushi-welcome/',
    FileRoutesByPath['/sushi-welcome/']['parentRoute'],
    FileRoutesByPath['/sushi-welcome/']['id'],
    FileRoutesByPath['/sushi-welcome/']['path'],
    FileRoutesByPath['/sushi-welcome/']['fullPath']
  >
}
declare module './routes/sushi-welcome/group/index' {
  const createFileRoute: CreateFileRoute<
    '/sushi-welcome/group/',
    FileRoutesByPath['/sushi-welcome/group/']['parentRoute'],
    FileRoutesByPath['/sushi-welcome/group/']['id'],
    FileRoutesByPath['/sushi-welcome/group/']['path'],
    FileRoutesByPath['/sushi-welcome/group/']['fullPath']
  >
}
declare module './routes/sushi-welcome/group/$roomId/(result)/result' {
  const createFileRoute: CreateFileRoute<
    '/sushi-welcome/group/$roomId/(result)/result',
    FileRoutesByPath['/sushi-welcome/group/$roomId/(result)/result']['parentRoute'],
    FileRoutesByPath['/sushi-welcome/group/$roomId/(result)/result']['id'],
    FileRoutesByPath['/sushi-welcome/group/$roomId/(result)/result']['path'],
    FileRoutesByPath['/sushi-welcome/group/$roomId/(result)/result']['fullPath']
  >
}
declare module './routes/sushi-welcome/group/$roomId/(share)/share' {
  const createFileRoute: CreateFileRoute<
    '/sushi-welcome/group/$roomId/(share)/share',
    FileRoutesByPath['/sushi-welcome/group/$roomId/(share)/share']['parentRoute'],
    FileRoutesByPath['/sushi-welcome/group/$roomId/(share)/share']['id'],
    FileRoutesByPath['/sushi-welcome/group/$roomId/(share)/share']['path'],
    FileRoutesByPath['/sushi-welcome/group/$roomId/(share)/share']['fullPath']
  >
}
declare module './routes/sushi-welcome/group/$roomId/(roomId)/index' {
  const createFileRoute: CreateFileRoute<
    '/sushi-welcome/group/$roomId/(roomId)/',
    FileRoutesByPath['/sushi-welcome/group/$roomId/(roomId)/']['parentRoute'],
    FileRoutesByPath['/sushi-welcome/group/$roomId/(roomId)/']['id'],
    FileRoutesByPath['/sushi-welcome/group/$roomId/(roomId)/']['path'],
    FileRoutesByPath['/sushi-welcome/group/$roomId/(roomId)/']['fullPath']
  >
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SushiWelcomeNewRoute: SushiWelcomeNewRoute,
  SushiWelcomeIndexRoute: SushiWelcomeIndexRoute,
  SushiWelcomeGroupIndexRoute: SushiWelcomeGroupIndexRoute,
  SushiWelcomeGroupRoomIdresultResultRoute:
    SushiWelcomeGroupRoomIdresultResultRoute,
  SushiWelcomeGroupRoomIdshareShareRoute:
    SushiWelcomeGroupRoomIdshareShareRoute,
  SushiWelcomeGroupRoomIdroomIdIndexRoute:
    SushiWelcomeGroupRoomIdroomIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
