/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as NewRouteImport } from './routes/new'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as GroupIndexRouteImport } from './routes/group/index'
import { Route as GroupRoomIdIndexRouteImport } from './routes/group/$roomId/index'
import { Route as GroupRoomIdShareRouteImport } from './routes/group/$roomId/share'
import { Route as GroupRoomIdResultRouteImport } from './routes/group/$roomId/result'

const NewRoute = NewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const GroupIndexRoute = GroupIndexRouteImport.update({
  id: '/group/',
  path: '/group/',
  getParentRoute: () => rootRouteImport,
} as any)
const GroupRoomIdIndexRoute = GroupRoomIdIndexRouteImport.update({
  id: '/group/$roomId/',
  path: '/group/$roomId/',
  getParentRoute: () => rootRouteImport,
} as any)
const GroupRoomIdShareRoute = GroupRoomIdShareRouteImport.update({
  id: '/group/$roomId/share',
  path: '/group/$roomId/share',
  getParentRoute: () => rootRouteImport,
} as any)
const GroupRoomIdResultRoute = GroupRoomIdResultRouteImport.update({
  id: '/group/$roomId/result',
  path: '/group/$roomId/result',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/new': typeof NewRoute
  '/group': typeof GroupIndexRoute
  '/group/$roomId/result': typeof GroupRoomIdResultRoute
  '/group/$roomId/share': typeof GroupRoomIdShareRoute
  '/group/$roomId': typeof GroupRoomIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/new': typeof NewRoute
  '/group': typeof GroupIndexRoute
  '/group/$roomId/result': typeof GroupRoomIdResultRoute
  '/group/$roomId/share': typeof GroupRoomIdShareRoute
  '/group/$roomId': typeof GroupRoomIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/new': typeof NewRoute
  '/group/': typeof GroupIndexRoute
  '/group/$roomId/result': typeof GroupRoomIdResultRoute
  '/group/$roomId/share': typeof GroupRoomIdShareRoute
  '/group/$roomId/': typeof GroupRoomIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/new'
    | '/group'
    | '/group/$roomId/result'
    | '/group/$roomId/share'
    | '/group/$roomId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/new'
    | '/group'
    | '/group/$roomId/result'
    | '/group/$roomId/share'
    | '/group/$roomId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/new'
    | '/group/'
    | '/group/$roomId/result'
    | '/group/$roomId/share'
    | '/group/$roomId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  NewRoute: typeof NewRoute
  GroupIndexRoute: typeof GroupIndexRoute
  GroupRoomIdResultRoute: typeof GroupRoomIdResultRoute
  GroupRoomIdShareRoute: typeof GroupRoomIdShareRoute
  GroupRoomIdIndexRoute: typeof GroupRoomIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/new': {
      id: '/new'
      path: '/new'
      fullPath: '/new'
      preLoaderRoute: typeof NewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/group/': {
      id: '/group/'
      path: '/group'
      fullPath: '/group'
      preLoaderRoute: typeof GroupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/group/$roomId/result': {
      id: '/group/$roomId/result'
      path: '/group/$roomId/result'
      fullPath: '/group/$roomId/result'
      preLoaderRoute: typeof GroupRoomIdResultRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/group/$roomId/share': {
      id: '/group/$roomId/share'
      path: '/group/$roomId/share'
      fullPath: '/group/$roomId/share'
      preLoaderRoute: typeof GroupRoomIdShareRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/group/$roomId/': {
      id: '/group/$roomId/'
      path: '/group/$roomId'
      fullPath: '/group/$roomId'
      preLoaderRoute: typeof GroupRoomIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/about' {
  const createFileRoute: CreateFileRoute<
    '/about',
    FileRoutesByPath['/about']['parentRoute'],
    FileRoutesByPath['/about']['id'],
    FileRoutesByPath['/about']['path'],
    FileRoutesByPath['/about']['fullPath']
  >
}
declare module './routes/new' {
  const createFileRoute: CreateFileRoute<
    '/new',
    FileRoutesByPath['/new']['parentRoute'],
    FileRoutesByPath['/new']['id'],
    FileRoutesByPath['/new']['path'],
    FileRoutesByPath['/new']['fullPath']
  >
}
declare module './routes/group/index' {
  const createFileRoute: CreateFileRoute<
    '/group/',
    FileRoutesByPath['/group/']['parentRoute'],
    FileRoutesByPath['/group/']['id'],
    FileRoutesByPath['/group/']['path'],
    FileRoutesByPath['/group/']['fullPath']
  >
}
declare module './routes/group/$roomId/result' {
  const createFileRoute: CreateFileRoute<
    '/group/$roomId/result',
    FileRoutesByPath['/group/$roomId/result']['parentRoute'],
    FileRoutesByPath['/group/$roomId/result']['id'],
    FileRoutesByPath['/group/$roomId/result']['path'],
    FileRoutesByPath['/group/$roomId/result']['fullPath']
  >
}
declare module './routes/group/$roomId/share' {
  const createFileRoute: CreateFileRoute<
    '/group/$roomId/share',
    FileRoutesByPath['/group/$roomId/share']['parentRoute'],
    FileRoutesByPath['/group/$roomId/share']['id'],
    FileRoutesByPath['/group/$roomId/share']['path'],
    FileRoutesByPath['/group/$roomId/share']['fullPath']
  >
}
declare module './routes/group/$roomId/index' {
  const createFileRoute: CreateFileRoute<
    '/group/$roomId/',
    FileRoutesByPath['/group/$roomId/']['parentRoute'],
    FileRoutesByPath['/group/$roomId/']['id'],
    FileRoutesByPath['/group/$roomId/']['path'],
    FileRoutesByPath['/group/$roomId/']['fullPath']
  >
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  NewRoute: NewRoute,
  GroupIndexRoute: GroupIndexRoute,
  GroupRoomIdResultRoute: GroupRoomIdResultRoute,
  GroupRoomIdShareRoute: GroupRoomIdShareRoute,
  GroupRoomIdIndexRoute: GroupRoomIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
