{"version":3,"file":"route-autoimport-plugin.cjs","sources":["../../../src/core/route-autoimport-plugin.ts"],"sourcesContent":["import { generateFromAst, logDiff, parseAst } from '@tanstack/router-utils'\nimport babel from '@babel/core'\nimport * as template from '@babel/template'\nimport { getConfig } from './config'\nimport { debug, fileIsInRoutesDirectory } from './utils'\nimport type { Config } from './config'\nimport type { UnpluginFactory } from 'unplugin'\n\n/**\n * This plugin adds imports for createFileRoute and createLazyFileRoute to the file route.\n */\nexport const unpluginRouteAutoImportFactory: UnpluginFactory<\n  Partial<Config> | undefined\n> = (options = {}) => {\n  let ROOT: string = process.cwd()\n  let userConfig = options as Config\n\n  return {\n    name: 'router-autoimport-plugin',\n    enforce: 'pre',\n\n    transform(code, id) {\n      let routeType: 'createFileRoute' | 'createLazyFileRoute'\n      if (code.includes('export const Route = createFileRoute(')) {\n        routeType = 'createFileRoute'\n      } else if (code.includes('export const Route = createLazyFileRoute(')) {\n        routeType = 'createLazyFileRoute'\n      } else {\n        return null\n      }\n\n      const routerImportPath = `@tanstack/${userConfig.target}-router`\n\n      const ast = parseAst({ code })\n\n      let isCreateRouteFunctionImported = false as boolean\n\n      babel.traverse(ast, {\n        Program: {\n          enter(programPath) {\n            programPath.traverse({\n              ImportDeclaration(path) {\n                const importedSpecifiers = path.node.specifiers.map(\n                  (specifier) => specifier.local.name,\n                )\n                if (\n                  importedSpecifiers.includes(routeType) &&\n                  path.node.source.value === routerImportPath\n                ) {\n                  isCreateRouteFunctionImported = true\n                }\n              },\n            })\n          },\n        },\n      })\n\n      if (!isCreateRouteFunctionImported) {\n        if (debug) console.info('Adding autoimports to route ', id)\n\n        const autoImportStatement = template.statement(\n          `import { ${routeType} } from '${routerImportPath}'`,\n        )()\n        ast.program.body.unshift(autoImportStatement)\n\n        const result = generateFromAst(ast, {\n          sourceMaps: true,\n          filename: id,\n          sourceFileName: id,\n        })\n        if (debug) {\n          logDiff(code, result.code)\n          console.log('Output:\\n', result.code + '\\n\\n')\n        }\n        return result\n      }\n\n      return null\n    },\n\n    transformInclude(id) {\n      return fileIsInRoutesDirectory(id, userConfig.routesDirectory)\n    },\n\n    vite: {\n      configResolved(config) {\n        ROOT = config.root\n        userConfig = getConfig(options, ROOT)\n      },\n    },\n\n    rspack() {\n      ROOT = process.cwd()\n      userConfig = getConfig(options, ROOT)\n    },\n\n    webpack() {\n      ROOT = process.cwd()\n      userConfig = getConfig(options, ROOT)\n    },\n  }\n}\n"],"names":["parseAst","debug","template","generateFromAst","logDiff","fileIsInRoutesDirectory","config","getConfig"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAWO,MAAM,iCAET,CAAC,UAAU,OAAO;AAChB,MAAA,OAAe,QAAQ,IAAI;AAC/B,MAAI,aAAa;AAEV,SAAA;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IAET,UAAU,MAAM,IAAI;AACd,UAAA;AACA,UAAA,KAAK,SAAS,uCAAuC,GAAG;AAC9C,oBAAA;AAAA,MACH,WAAA,KAAK,SAAS,2CAA2C,GAAG;AACzD,oBAAA;AAAA,MAAA,OACP;AACE,eAAA;AAAA,MAAA;AAGH,YAAA,mBAAmB,aAAa,WAAW,MAAM;AAEvD,YAAM,MAAMA,YAAAA,SAAS,EAAE,MAAM;AAE7B,UAAI,gCAAgC;AAEpC,YAAM,SAAS,KAAK;AAAA,QAClB,SAAS;AAAA,UACP,MAAM,aAAa;AACjB,wBAAY,SAAS;AAAA,cACnB,kBAAkB,MAAM;AAChB,sBAAA,qBAAqB,KAAK,KAAK,WAAW;AAAA,kBAC9C,CAAC,cAAc,UAAU,MAAM;AAAA,gBACjC;AAEE,oBAAA,mBAAmB,SAAS,SAAS,KACrC,KAAK,KAAK,OAAO,UAAU,kBAC3B;AACgC,kDAAA;AAAA,gBAAA;AAAA,cAClC;AAAA,YACF,CACD;AAAA,UAAA;AAAA,QACH;AAAA,MACF,CACD;AAED,UAAI,CAAC,+BAA+B;AAClC,YAAIC,MAAO,MAAA,SAAQ,KAAK,gCAAgC,EAAE;AAE1D,cAAM,sBAAsBC,oBAAS;AAAA,UACnC,YAAY,SAAS,YAAY,gBAAgB;AAAA,QAAA,EACjD;AACE,YAAA,QAAQ,KAAK,QAAQ,mBAAmB;AAEtC,cAAA,SAASC,4BAAgB,KAAK;AAAA,UAClC,YAAY;AAAA,UACZ,UAAU;AAAA,UACV,gBAAgB;AAAA,QAAA,CACjB;AACD,YAAIF,aAAO;AACDG,8BAAA,MAAM,OAAO,IAAI;AACzB,kBAAQ,IAAI,aAAa,OAAO,OAAO,MAAM;AAAA,QAAA;AAExC,eAAA;AAAA,MAAA;AAGF,aAAA;AAAA,IACT;AAAA,IAEA,iBAAiB,IAAI;AACZ,aAAAC,8BAAwB,IAAI,WAAW,eAAe;AAAA,IAC/D;AAAA,IAEA,MAAM;AAAA,MACJ,eAAeC,UAAQ;AACrB,eAAOA,SAAO;AACD,qBAAAC,OAAAA,UAAU,SAAS,IAAI;AAAA,MAAA;AAAA,IAExC;AAAA,IAEA,SAAS;AACP,aAAO,QAAQ,IAAI;AACN,mBAAAA,OAAAA,UAAU,SAAS,IAAI;AAAA,IACtC;AAAA,IAEA,UAAU;AACR,aAAO,QAAQ,IAAI;AACN,mBAAAA,OAAAA,UAAU,SAAS,IAAI;AAAA,IAAA;AAAA,EAExC;AACF;;"}